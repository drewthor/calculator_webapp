{"version":3,"sources":["EquationProvider.js","components/NumberBox.js","components/NumberButton.js","components/FunctionButton.js","components/NegateButton.js","components/ClearButton.js","components/EqualsButton.js","components/LatestCalculations.js","App.js","index.js"],"names":["EquationContext","createContext","initialState","currentNumber","functionType","value","calculation","stateReducer","state","action","type","number","Number","parseFloat","index","length","slice","fetch","method","headers","body","JSON","stringify","catch","Error","EquationProvider","props","useReducer","dispatch","performCalculation","Math","round","Provider","handleClearAll","handleNegateNumber","handleAddNumber","handleSetFunctionType","handlePerformEquals","children","NumberBox","useContext","readOnly","NumberButton","span","className","onClick","FunctionButton","NegateButton","ClearButton","EqualsButton","LatestCalculations","useState","calculations","setCalculations","useEffect","id","setInterval","a","then","response","json","map","item","Calculation","clearInterval","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d53753f.chunk.js","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nexport const EquationContext = createContext();\n\nconst sendCalc = (calculation) => {\n  fetch('https://us-central1-calculatorwebapp-253804.cloudfunctions.net/CalculationsAPI', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      calculation: calculation,\n    })\n  }).catch();\n}\n\nconst initialState = {\n  currentNumber: '',\n  functionType: '',\n  value: '',\n  calculation: '',\n}\n\nconst stateReducer = (state, action) => {\n  switch (action.type) {\n  case 'clear':\n    return {...state, functionType: '', currentNumber: '', value: '', calculation: ''};\n\n  case 'negate':\n    if (state.currentNumber !== '') {\n      let number = Number.parseFloat(state.currentNumber) * -1;\n      let index = state.calculation.length - state.currentNumber.length;\n      return {...state, currentNumber: number, calculation: state.calculation.slice(0, index) + number};\n    }\n    else if (state.value !== '') {\n      // negate button was pressed after setting function type\n      let index = state.calculation.length - 1\n      return {...state, value: Number.parseFloat(state.value) * -1, calculation: state.calculation.slice(0, index) + \"*-1\" + state.functionType};\n    }\n    return state;\n\n  case 'addNumber':\n    return {...state, currentNumber: state.currentNumber + action.currentNumber, calculation: state.calculation + action.currentNumber, value: state.functionType === '' ? '' : state.value};\n\n  case 'clearCurrentNumber':\n    return {...state, currentNumber: ''};\n\n  case 'setFunctionType':\n    if (state.currentNumber === '' && state.value === '') {\n      return state;\n    }\n    else if (state.calculation.length > 0 && state.calculation.slice(-1) === state.functionType) {\n      return {...state, functionType: action.functionType, calculation: state.calculation.slice(0, state.calculation.length - 1) + action.functionType};\n    }\n    else if (state.currentNumber !== '' && state.value === '') {\n      return {...state, value: state.currentNumber, functionType: action.functionType, currentNumber: '', calculation: state.calculation + action.functionType};\n    }\n    else if (state.value !== '') {\n      return {...state, functionType: action.functionType, calculation: state.calculation + action.functionType};\n    }\n    return state;\n\n  case 'equals':\n    sendCalc(state.calculation + '=' + state.value);\n    return {...state, functionType: '', calculation: state.value}\n\n  case 'setValue':\n    return {...state, value: action.value, currentNumber: ''};\n\n  case 'clearCalculation':\n    return {...state, calculation: ''};\n\n  default:\n    throw new Error();\n  }\n}\n\nconst EquationProvider = (props) => {\n  const [state, dispatch] = useReducer(stateReducer, initialState);\n\n  const handleClearAll = () => {\n    dispatch({type: 'clear'});\n  };\n\n  const handleNegateNumber = () => {\n    dispatch({type: 'negate'});\n  };\n\n  const handleAddNumber = number => {\n    dispatch({type: 'addNumber', currentNumber: number});\n  };\n\n  const handleSetFunctionType = type => {\n    if (state.currentNumber !== '' && state.value !== '') {\n      performCalculation();\n    }\n    dispatch({type: 'setFunctionType', functionType: type});\n  };\n\n  const handlePerformEquals = () => {\n    performCalculation();\n    dispatch({type: 'equals'});\n  };\n\n  const performCalculation = () => {\n    if (state.currentNumber !== '' && state.functionType !== '') {\n      switch(state.functionType) {\n      case '+':\n        dispatch({type: 'setValue', value: Math.round((Number.parseFloat(state.value) + Number.parseFloat(state.currentNumber)) * 1000) / 1000});\n        break;\n      case '-':\n        dispatch({type: 'setValue', value: Math.round((Number.parseFloat(state.value) - Number.parseFloat(state.currentNumber)) * 1000) / 1000});\n        break;\n      case '*':\n        dispatch({type: 'setValue', value: Math.round((Number.parseFloat(state.value) * Number.parseFloat(state.currentNumber)) * 1000) / 1000});\n        break;\n      case '/':\n        dispatch({type: 'setValue', value: Math.round((Number.parseFloat(state.value) / Number.parseFloat(state.currentNumber)) * 1000) / 1000});\n        break;\n      default:\n        break;\n      }\n    }\n    else if (state.currentNumber !== '' && state.functionType === '') {\n      dispatch({type: 'setValue', value: state.currentNumber});\n    }\n  };\n\n  return (\n    <EquationContext.Provider\n      value={{ \n        state,\n        handleClearAll,\n        handleNegateNumber,\n        handleAddNumber,\n        handleSetFunctionType,\n        handlePerformEquals\n      }}\n    >\n      {props.children}\n    </EquationContext.Provider>\n  );\n};\n\nexport default EquationProvider;","import React, { useContext } from \"react\";\nimport { EquationContext } from '../EquationProvider'\n\nconst NumberBox = () => {\n    const { state }  = useContext(EquationContext);\n\n    return (\n        <form>\n            <input\n                type=\"text\"\n                value={ (state.currentNumber === '' ? (state.value === '' ? '0' : state.value) : state.currentNumber) }\n                readOnly\n            />\n        </form>\n    );\n};\n\nexport default NumberBox;\n","import React, { useContext } from \"react\";\nimport { EquationContext } from \"../EquationProvider\";\n\nconst NumberButton = ({ value, span }) => {\n    const { handleAddNumber } = useContext(EquationContext);\n\n    return (\n        <input\n            type=\"button\"\n            className={`button numberButton span-${span || 1}`}\n            value={value}\n            onClick={() => handleAddNumber(value)}\n            readOnly\n        />\n    );\n};\n\nexport default NumberButton;\n","import React, { useContext } from \"react\";\nimport { EquationContext } from \"../EquationProvider\";\n\nconst FunctionButton = ({value}) => {\n    const { handleSetFunctionType } = useContext(EquationContext);\n\n    return (\n        <input\n            type=\"button\"\n            className=\"button functionButton\"\n            value={value}\n            onClick={() => handleSetFunctionType(value)}\n            readOnly\n        />\n    );\n}\n\nexport default FunctionButton;\n","import React, { useContext } from \"react\";\nimport { EquationContext } from \"../EquationProvider\";\n\nconst NegateButton = () => {\n    const { handleNegateNumber } = useContext(EquationContext);\n\n    return (\n        <input\n            type=\"button\"\n            className=\"button specialButton\"\n            value={'+/-'}\n            onClick={handleNegateNumber}\n            readOnly\n        />\n    );\n}\n\nexport default NegateButton;\n","import React, { useContext } from \"react\";\nimport { EquationContext } from \"../EquationProvider\";\n\nconst ClearButton = ({ span }) => {\n    const { handleClearAll } = useContext(EquationContext);\n\n    return(\n        <input\n            type=\"button\"\n            className={`button specialButton span-${span || 1}`}\n            value={'C'}\n            onClick={handleClearAll}\n            readOnly\n        />\n    );\n}\n\nexport default ClearButton;\n","import React, { useContext } from \"react\";\nimport { EquationContext } from \"../EquationProvider\";\n\nconst EqualsButton = () => {\n    const { handlePerformEquals } = useContext(EquationContext);\n\n    return (\n        <input\n            type=\"button\"\n            className=\"button functionButton\"\n            value={'='}\n            onClick={handlePerformEquals}\n            readOnly\n        />\n    );\n}\n\nexport default EqualsButton;\n","import React, { useEffect, useState } from \"react\";\n\nconst LatestCalculations = () => {\n    const [calculations, setCalculations] = useState([]);\n\n    useEffect(() => {\n        const id = setInterval(async () => {\n            let response = await fetch('https://us-central1-calculatorwebapp-253804.cloudfunctions.net/CalculationsAPI', {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            })\n            .then(response => response.json())\n            .then(response => response.map(item => item.Calculation));\n            setCalculations(response);\n          }, 500);\n          return () => clearInterval(id);\n    }, []);\n\n    return (\n        <div className=\"latestCalculations\">\n            <h3>Latest Calculations</h3>\n            <ol>\n                {calculations.map((calculation, index) => ( <li key={index}>{calculation}</li>))}\n            </ol>\n        </div>\n    );\n};\n\nexport default LatestCalculations;\n","import React from 'react';\nimport './App.css';\nimport NumberBox from './components/NumberBox';\nimport NumberButton from './components/NumberButton';\nimport FunctionButton from './components/FunctionButton';\nimport NegateButton from './components/NegateButton';\nimport ClearButton from './components/ClearButton';\nimport EqualsButton from './components/EqualsButton';\nimport EquationProvider from './EquationProvider';\nimport LatestCalculations from './components/LatestCalculations';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Calculator</h1>\n      <EquationProvider>\n        <NumberBox />\n\n        <form className=\"calcGrid\">\n          <ClearButton span=\"2\" />\n          <NegateButton />\n          <FunctionButton value=\"/\" />\n          <NumberButton value={7} />\n          <NumberButton value={8} />\n          <NumberButton value={9} />\n          <FunctionButton value=\"*\" />\n          <NumberButton value={4} />\n          <NumberButton value={5} />\n          <NumberButton value={6} />\n          <FunctionButton value=\"-\" />\n          <NumberButton value={1} />\n          <NumberButton value={2} />\n          <NumberButton value={3} />\n          <FunctionButton value=\"+\" />\n          <NumberButton value={0} span=\"2\" />\n          <NumberButton value=\".\" />\n          <EqualsButton />\n        </form>\n      </EquationProvider>\n      <LatestCalculations />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}